{"version":3,"sources":["webpack:///./src/views/PostPage.vue","webpack:///./src/components/PostPageLevel.vue","webpack:///./src/components/PostPageLevel.vue?d82b","webpack:///./src/components/PostPageLevel.vue?6149","webpack:///./src/plugins/prism_wrap.js","webpack:///./src/views/PostPage.vue?6892","webpack:///./src/views/PostPage.vue?0f87","webpack:///./src/views/PostPage.vue?174f","webpack:///./src/components/PostPageLevel.vue?b314"],"names":["class","shadow","title","content","$router","push","levelList","l","index","key","ref","userAvatarUrl","userName","level","date","hasLike","likeNum","dislikeNum","isPoster","isYou","hasEdited","isLoading","isAdmin","isPinned","onReplyTextClicked","onDeleteTextClicked","onSaveTextClicked","$event","onLikeClicked","onPinClicked","levelNum","isLoadingPage","background","layout","page-size","pageSize","page-count","current-page","currentPage","total","filteredLevelNum","hide-on-single-page","onCurrentPageChanged","replyBoxTextArea","type","onReply","size","shape","src","displayEditor","editContent","$emit","underline","canDelete","pinText","props","String","Number","Boolean","default","components","RichTextEditor","emits","data","computed","this","mounted","showContent","watch","newValue","setTimeout","methods","html","$refs","innerHTML","render","PrismHighlightAll","Prism","highlightAll","postId","created","$watch","$route","query","path","loadLevels","APIs","reply","then","success","newPage","Math","ceil","catch","e","error","window","scroll","top","document","body","clientHeight","left","behavior","$confirm","confirmButtonText","cancelButtonText","deletePostLevel","value","v","hasDeletePost","levelRef","editPostLevel","getPostLevel","pin","pinPost","post_id","parseInt","page","filter","search","getPostInfo","getPostLevelList","levels","levelRefList","$nextTick","pageNumber","r","hash","params","like","likePostLevel","getPostLevelLikeInfo"],"mappings":"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","file":"js/chunk-0ada2840.9560517b.js","sourcesContent":["<template>\n  <div class=\"post-page\">\n    <el-card shadow=\"never\" class=\"post-page-body\">\n    <div v-loading=\"isLoadingPage\">\n    <!--div class=\"post-page-title\">{{ title }}</div-->\n    <el-page-header title=\"\" :content=\"title\" @back=\"$router.push('/')\"></el-page-header>\n\n    <div class=\"post-page-level-container\" v-for=\"(l, index) in levelList\" :key=\"index\">\n      <post-page-level\n        :ref=\"`levelRefList${index}`\"\n        :userAvatarUrl=\"l.userAvatarUrl\"\n        :userName=\"l.userName\"\n        :level=\"l.level\"\n        :content=\"l.content\"\n        :date=\"l.date\"\n        :hasLike=\"l.hasLike\"\n        :likeNum=\"l.likeNum\"\n        :dislikeNum=\"l.dislikeNum\"\n        :isPoster=\"l.isPoster\"\n        :isYou=\"l.isYou\"\n        :hasEdited=\"l.hasEdited\"\n        :isLoading=\"l.isLoading\"\n        :isAdmin=\"l.isAdmin\"\n        :isPinned=\"l.isPinned\"\n        @replyTextClick=\"onReplyTextClicked\"\n        @deleteTextClick=\"onDeleteTextClicked(l.level)\"\n        @saveTextClick=\"onSaveTextClicked(index, $event)\"\n        @likeClick=\"onLikeClicked(index, 1)\"\n        @dislikeClick=\"onLikeClicked(index, 2)\"\n        @pinClick=\"onPinClicked\"\n        >\n      </post-page-level>\n    </div>\n\n    <div class=\"post-page-tail\">Replies: {{ levelNum }}</div>\n\n    </div>\n    </el-card>\n\n    <el-pagination\n      background\n      layout=\"prev, pager, next, jumper\"\n      :page-size=\"pageSize\"\n      :page-count=\"5\"\n      :current-page=\"currentPage\"\n      :total=\"filteredLevelNum\"\n      :hide-on-single-page=\"true\"\n      @current-change=\"onCurrentPageChanged\">\n    </el-pagination>\n\n    <el-card shadow=\"never\">\n    <div class=\"reply-box-container\">\n      <div class=\"reply-box-title\">Reply</div>\n      <rich-text-editor v-model=\"replyBoxTextArea\"></rich-text-editor>\n      <el-button type=\"primary\" @click=\"onReply\">Reply</el-button>\n    </div>\n    </el-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Tools from '@/APIs/Tools'\nimport APIs from '@/APIs'\nimport { Options, Vue } from 'vue-class-component'\nimport RichTextEditor from '@/components/RichTextEditor.vue'\nimport PostPageLevel from '@/components/PostPageLevel.vue'\nimport { ElMessage } from 'element-plus'\nimport { PrismHighlightAll } from '@/plugins/prism_wrap'\n\n@Options({\n  components: {\n    'rich-text-editor': RichTextEditor,\n    'post-page-level': PostPageLevel\n  },\n  data () {\n    return {\n      title: '',\n      postId: '',\n      currentPage: 1,\n      replyBoxTextArea: '',\n      isLoadingPage: false,\n      levelList: [],\n      levelNum: 0,\n      filteredLevelNum: 0,\n      pageSize: 7\n    }\n  },\n  created () {\n    this.$watch(\n      () => this.$route.query,\n      () => {\n        if (this.$route.path === '/post') {\n          this.loadLevels()\n        }\n      }\n    )\n  },\n  mounted () {\n    this.loadLevels()\n  },\n  methods: {\n    onReply () {\n      if (this.replyBoxTextArea === '') {\n        ElMessage.error('The reply content mustn\\'t be empty!')\n        return\n      }\n\n      APIs.reply(this.postId, this.replyBoxTextArea).then(() => {\n        ElMessage.success('You\\'ve just replied in a post')\n        this.replyBoxTextArea = ''\n        const newPage = Math.ceil((this.levelNum + 1) / this.pageSize)\n        if (this.currentPage !== newPage) {\n          this.$router.push(`/post?post_id=${this.postId}&page=${newPage}`)\n        } else {\n          this.loadLevels()\n        }\n      }).catch((e) => {\n        ElMessage.error('Can\\'t reply. ' + e)\n      })\n    },\n    onReplyTextClicked () {\n      window.scroll({ top: document.body.clientHeight, left: 0, behavior: 'smooth' })\n    },\n    onDeleteTextClicked (level:number) {\n      this.$confirm('Are you sure to delete this level?', 'Warning', {\n        confirmButtonText: 'Of caurse',\n        cancelButtonText: 'No sure yet',\n        type: 'warning'\n      }).then(() => {\n        APIs.deletePostLevel(this.postId, level).then((value) => {\n          const v = value as { hasDeletePost:boolean }\n          if (v.hasDeletePost) { // go to post list page\n            this.$router.push('/')\n            ElMessage.success('You\\'ve just deleted a post.')\n          } else { // refresh current page\n            this.loadLevels()\n            ElMessage.success('You\\'ve just deleted a level.')\n          }\n        }).catch((e) => {\n          ElMessage.error('Can\\'t delete this level.' + e)\n        })\n      }).catch((e: unknown) => e)\n    },\n    onSaveTextClicked (index:number, content: string) {\n      const levelRef = this.$refs[`levelRefList${index}`]\n      const l = this.levelList[index]\n      l.isLoading = true\n      APIs.editPostLevel(this.postId, l.level, content).then(() => {\n        levelRef.displayEditor = false\n        ElMessage.success('Edit has been saved.')\n        return APIs.getPostLevel(this.postId, l.level)\n      }).catch((e) => {\n        ElMessage.error('Can\\'t save.' + e)\n      }).then((value) => {\n        const v = value as { level:unknown }\n        this.levelList[index] = v.level\n      }).catch((e) => {\n        ElMessage.error('Can\\'t fetch level data.' + e)\n      })\n    },\n    onPinClicked (pin:boolean) {\n      this.$confirm(`Are you sure to ${pin ? 'pinned' : 'unpinned'} this post?`, 'Warning', {\n        confirmButtonText: 'Of caurse',\n        cancelButtonText: 'No sure yet',\n        type: 'warning'\n      }).then(() => {\n        APIs.pinPost(this.postId, pin).then(() => {\n          ElMessage.success(`You've just ${pin ? 'pinned' : 'unpinned'} a post.`)\n          this.$router.push('/')\n        }).catch((e) => {\n          ElMessage.error(`You can't ${pin ? 'pinned' : 'unpinned'} this post.` + e)\n        })\n      }).catch((e: unknown) => e)\n    },\n    loadLevels () {\n      this.postId = this.$route.query.post_id\n      let currentPage = Number.parseInt(this.$route.query.page)\n      if (!currentPage) {\n        currentPage = 1\n      }\n      const filter = this.$route.query.search || ''\n\n      this.isLoadingPage = true\n\n      APIs.getPostInfo(this.postId).then((value) => {\n        const v = value as {levelNum:number, title:string}\n        this.levelNum = v.levelNum\n        this.title = v.title\n        return APIs.getPostLevelList(this.postId, this.pageSize, currentPage, filter)\n      }).then((value) => {\n        const v = value as { levels:unknown, levelNum:number }\n        this.levelList = v.levels\n        this.levelRefList = []\n        this.filteredLevelNum = v.levelNum\n        if (this.currentPage !== currentPage) {\n          this.currentPage = -1\n        }\n        this.currentPage = currentPage\n\n        this.$nextTick(() => {\n          PrismHighlightAll()\n        })\n      }).catch((e) => {\n        ElMessage.error('Error happing while loading post page. ' + e)\n      }).then(() => {\n        this.isLoadingPage = false\n      })\n    },\n    onCurrentPageChanged (pageNumber:number) {\n      const r = {\n        path: this.$route.path,\n        query: { ...this.$route.query, page: pageNumber },\n        hash: this.$route.hash,\n        params: { ...this.$route.params }\n      }\n      this.$router.push(r)\n    },\n    onLikeClicked (index:number, like:number) {\n      const l = this.levelList[index]\n      APIs.likePostLevel(this.postId, l.level, like).then(() => {\n        return APIs.getPostLevelLikeInfo(this.postId, l.level)\n      }).then((value) => {\n        const v = value as { hasLike:number, likeNum:number, dislikeNum:number }\n        l.hasLike = v.hasLike\n        l.likeNum = v.likeNum\n        l.dislikeNum = v.dislikeNum\n      }).catch((e) => {\n        ElMessage.error(`Can't ${like === 1 ? 'like' : 'dislike'} this level.` + e)\n      })\n    }\n  }\n})\nexport default class PostPage extends Vue {}\n</script>\n\n<style scope>\n.post-page{\n  text-align: left;\n}\n\n.post-page-body{\n  margin-bottom: 15px;\n}\n\n.post-page-title{\n  font-size: 24px;\n  margin-bottom: 15px;\n}\n\n.post-page-tail{\n  margin-top: 5px;\n  margin-bottom: -5px;\n}\n\n.el-pagination{\n  margin-bottom: 15px;\n  text-align: center;\n}\n\n.reply-box-container{\n  text-align: left;\n}\n\n.reply-box-container > div{\n  margin-bottom: 15px;\n}\n\n.reply-box-title{\n  font-size: 32px;\n  margin: 5px;\n}\n\n.el-page-header{\n  margin-bottom: 15px;\n}\n\n</style>\n","<template>\n  <div class=\"post-page-level\">\n  <el-card shadow=\"never\">\n    <div class=\"level-box\">\n      <div class=\"level-box-left\">\n        <div class=\"level-box-user-avatar\"><el-avatar size=\"large\" shape=\"square\" :src=\"userAvatarUrl\"></el-avatar></div>\n        <div class=\"level-box-user-name-container\">\n          <div class=\"level-box-user-name\">{{ userName }}</div>\n          <div v-if=\"isPoster\"><el-tag class=\"poster-tag\" type=\"warning\">Poster</el-tag></div>\n          <div v-if=\"isYou\"><el-tag>You</el-tag></div>\n        </div>\n      </div>\n      <div v-loading=\"isLoading\" class=\"level-box-right\">\n        <rich-text-editor v-if=\"displayEditor\" v-model=\"editContent\"></rich-text-editor>\n        <div v-else class=\"level-box-content\" ref=\"content\"></div>\n        <div class=\"level-box-corner\">\n          <span v-if=\"displayEditor\">L{{ level }}\n            <el-link type=\"primary\" @click.prevent=\"$emit('saveTextClick', editContent)\">Save</el-link> |\n            <el-link type=\"primary\" @click.prevent=\"displayEditor = false\">Cancel</el-link>\n          </span>\n          <span v-else>\n            <span>\n            <el-link\n              :type=\"hasLike === 1 ? 'danger' : 'primary'\"\n              @click.prevent=\"$emit('likeClick')\" :underline=\"false\">\n              <i class=\"el-icon-caret-top\"></i>\n              {{ likeNum }}\n            </el-link>\n            </span>\n            <span>\n            <el-link\n              :type=\"hasLike === 2 ? 'danger' : 'primary'\"\n              @click.prevent=\"$emit('dislikeClick')\" :underline=\"false\">\n              <i class=\"el-icon-caret-bottom\"></i>\n              {{ dislikeNum }}\n            </el-link>\n            </span>\n            L{{ level }} {{ date }}\n            <span v-if=\"hasEdited\"> (Edited) </span>\n            <el-link type=\"primary\" @click.prevent=\"$emit('replyTextClick')\">Reply</el-link>\n            <span v-if=\"isYou\"> | <el-link type=\"primary\" @click.prevent=\"displayEditor = true\">Edit</el-link></span>\n            <span v-if=\"canDelete\"> | <el-link type=\"primary\" @click.prevent=\"$emit('deleteTextClick')\">Delete</el-link></span>\n            <span v-if=\"level === 1 && isAdmin\"> | <el-link type=\"primary\" @click.prevent=\"$emit('pinClick', !isPinned)\">{{ pinText }}</el-link></span>\n          </span>\n        </div>\n      </div>\n    </div>\n  </el-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from 'vue-class-component'\nimport RichTextEditor from '@/components/RichTextEditor.vue'\n\n@Options({\n  props: {\n    userAvatarUrl: String,\n    userName: String,\n    content: String,\n    level: Number,\n    date: String,\n    isPoster: Boolean,\n    isYou: Boolean,\n    isLoading: Boolean,\n    hasLike: {\n      type: Number,\n      default: 0 // 1 = like, 2 = dislike\n    },\n    likeNum: {\n      type: Number,\n      default: 0\n    },\n    dislikeNum: {\n      type: Number,\n      default: 0\n    },\n    hasEdited: Boolean,\n    isAdmin: Boolean,\n    isPinned: Boolean\n  },\n  components: {\n    'rich-text-editor': RichTextEditor\n  },\n  emits: [\n    'replyTextClick',\n    'deleteTextClick',\n    'saveTextClick',\n    'likeClick',\n    'dislikeClick',\n    'pinClick'\n  ],\n  data () {\n    return {\n      displayEditor: false,\n      editContent: '666'\n    }\n  },\n  computed: {\n    canDelete () {\n      return this.isYou || this.isAdmin\n    },\n    pinText () {\n      return this.isPinned ? 'Unpin' : 'Pin'\n    }\n  },\n  mounted () {\n    this.showContent(this.content)\n  },\n  watch: {\n    content (newValue) {\n      this.showContent(newValue)\n    },\n    displayEditor (newValue) {\n      if (newValue) {\n        this.editContent = this.content\n      } else {\n        setTimeout(() => {\n          this.showContent(this.content)\n        }, 0)\n      }\n    }\n  },\n  methods: {\n    showContent (html:string) {\n      this.$refs.content.innerHTML = html\n    }\n  }\n})\nexport default class PostPageLevel extends Vue {}\n</script>\n\n<style scope>\n.level-box{\n  display: flex;\n  flex-direction: row;\n  justify-items: stretch;\n  align-items: stretch;\n  margin: -20px;\n}\n\n.level-box-left{\n  background-color: rgb(247, 249, 251);\n  min-height: 300px;\n  border-right: 1px solid #EBEEF5;\n  flex: 1;\n}\n\n.level-box-right{\n  flex: 10;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  max-width: 82.55%;\n}\n\n.level-box-content{\n  height: 100%;\n  overflow-x: auto;\n}\n\n.level-box-user-avatar{\n  margin: 50px;\n  margin-top: 75px;\n  margin-bottom: 15px;\n}\n\n.level-box-user-name-container{\n  text-align: center;\n}\n\n.level-box-user-name{\n  margin-bottom: 15px;\n}\n\n.level-box-corner{\n  margin-top: auto;\n  text-align: right;\n}\n\n</style>\n","\nimport { Options, Vue } from 'vue-class-component'\nimport RichTextEditor from '@/components/RichTextEditor.vue'\n\n@Options({\n  props: {\n    userAvatarUrl: String,\n    userName: String,\n    content: String,\n    level: Number,\n    date: String,\n    isPoster: Boolean,\n    isYou: Boolean,\n    isLoading: Boolean,\n    hasLike: {\n      type: Number,\n      default: 0 // 1 = like, 2 = dislike\n    },\n    likeNum: {\n      type: Number,\n      default: 0\n    },\n    dislikeNum: {\n      type: Number,\n      default: 0\n    },\n    hasEdited: Boolean,\n    isAdmin: Boolean,\n    isPinned: Boolean\n  },\n  components: {\n    'rich-text-editor': RichTextEditor\n  },\n  emits: [\n    'replyTextClick',\n    'deleteTextClick',\n    'saveTextClick',\n    'likeClick',\n    'dislikeClick',\n    'pinClick'\n  ],\n  data () {\n    return {\n      displayEditor: false,\n      editContent: '666'\n    }\n  },\n  computed: {\n    canDelete () {\n      return this.isYou || this.isAdmin\n    },\n    pinText () {\n      return this.isPinned ? 'Unpin' : 'Pin'\n    }\n  },\n  mounted () {\n    this.showContent(this.content)\n  },\n  watch: {\n    content (newValue) {\n      this.showContent(newValue)\n    },\n    displayEditor (newValue) {\n      if (newValue) {\n        this.editContent = this.content\n      } else {\n        setTimeout(() => {\n          this.showContent(this.content)\n        }, 0)\n      }\n    }\n  },\n  methods: {\n    showContent (html:string) {\n      this.$refs.content.innerHTML = html\n    }\n  }\n})\nexport default class PostPageLevel extends Vue {}\n","import { render } from \"./PostPageLevel.vue?vue&type=template&id=4dc7a65b\"\nimport script from \"./PostPageLevel.vue?vue&type=script&lang=ts\"\nexport * from \"./PostPageLevel.vue?vue&type=script&lang=ts\"\n\nimport \"./PostPageLevel.vue?vue&type=style&index=0&id=4dc7a65b&scope=true&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\nexport function PrismHighlightAll () {\n    Prism.highlightAll()\n}\n","\nimport Tools from '@/APIs/Tools'\nimport APIs from '@/APIs'\nimport { Options, Vue } from 'vue-class-component'\nimport RichTextEditor from '@/components/RichTextEditor.vue'\nimport PostPageLevel from '@/components/PostPageLevel.vue'\nimport { ElMessage } from 'element-plus'\nimport { PrismHighlightAll } from '@/plugins/prism_wrap'\n\n@Options({\n  components: {\n    'rich-text-editor': RichTextEditor,\n    'post-page-level': PostPageLevel\n  },\n  data () {\n    return {\n      title: '',\n      postId: '',\n      currentPage: 1,\n      replyBoxTextArea: '',\n      isLoadingPage: false,\n      levelList: [],\n      levelNum: 0,\n      filteredLevelNum: 0,\n      pageSize: 7\n    }\n  },\n  created () {\n    this.$watch(\n      () => this.$route.query,\n      () => {\n        if (this.$route.path === '/post') {\n          this.loadLevels()\n        }\n      }\n    )\n  },\n  mounted () {\n    this.loadLevels()\n  },\n  methods: {\n    onReply () {\n      if (this.replyBoxTextArea === '') {\n        ElMessage.error('The reply content mustn\\'t be empty!')\n        return\n      }\n\n      APIs.reply(this.postId, this.replyBoxTextArea).then(() => {\n        ElMessage.success('You\\'ve just replied in a post')\n        this.replyBoxTextArea = ''\n        const newPage = Math.ceil((this.levelNum + 1) / this.pageSize)\n        if (this.currentPage !== newPage) {\n          this.$router.push(`/post?post_id=${this.postId}&page=${newPage}`)\n        } else {\n          this.loadLevels()\n        }\n      }).catch((e) => {\n        ElMessage.error('Can\\'t reply. ' + e)\n      })\n    },\n    onReplyTextClicked () {\n      window.scroll({ top: document.body.clientHeight, left: 0, behavior: 'smooth' })\n    },\n    onDeleteTextClicked (level:number) {\n      this.$confirm('Are you sure to delete this level?', 'Warning', {\n        confirmButtonText: 'Of caurse',\n        cancelButtonText: 'No sure yet',\n        type: 'warning'\n      }).then(() => {\n        APIs.deletePostLevel(this.postId, level).then((value) => {\n          const v = value as { hasDeletePost:boolean }\n          if (v.hasDeletePost) { // go to post list page\n            this.$router.push('/')\n            ElMessage.success('You\\'ve just deleted a post.')\n          } else { // refresh current page\n            this.loadLevels()\n            ElMessage.success('You\\'ve just deleted a level.')\n          }\n        }).catch((e) => {\n          ElMessage.error('Can\\'t delete this level.' + e)\n        })\n      }).catch((e: unknown) => e)\n    },\n    onSaveTextClicked (index:number, content: string) {\n      const levelRef = this.$refs[`levelRefList${index}`]\n      const l = this.levelList[index]\n      l.isLoading = true\n      APIs.editPostLevel(this.postId, l.level, content).then(() => {\n        levelRef.displayEditor = false\n        ElMessage.success('Edit has been saved.')\n        return APIs.getPostLevel(this.postId, l.level)\n      }).catch((e) => {\n        ElMessage.error('Can\\'t save.' + e)\n      }).then((value) => {\n        const v = value as { level:unknown }\n        this.levelList[index] = v.level\n      }).catch((e) => {\n        ElMessage.error('Can\\'t fetch level data.' + e)\n      })\n    },\n    onPinClicked (pin:boolean) {\n      this.$confirm(`Are you sure to ${pin ? 'pinned' : 'unpinned'} this post?`, 'Warning', {\n        confirmButtonText: 'Of caurse',\n        cancelButtonText: 'No sure yet',\n        type: 'warning'\n      }).then(() => {\n        APIs.pinPost(this.postId, pin).then(() => {\n          ElMessage.success(`You've just ${pin ? 'pinned' : 'unpinned'} a post.`)\n          this.$router.push('/')\n        }).catch((e) => {\n          ElMessage.error(`You can't ${pin ? 'pinned' : 'unpinned'} this post.` + e)\n        })\n      }).catch((e: unknown) => e)\n    },\n    loadLevels () {\n      this.postId = this.$route.query.post_id\n      let currentPage = Number.parseInt(this.$route.query.page)\n      if (!currentPage) {\n        currentPage = 1\n      }\n      const filter = this.$route.query.search || ''\n\n      this.isLoadingPage = true\n\n      APIs.getPostInfo(this.postId).then((value) => {\n        const v = value as {levelNum:number, title:string}\n        this.levelNum = v.levelNum\n        this.title = v.title\n        return APIs.getPostLevelList(this.postId, this.pageSize, currentPage, filter)\n      }).then((value) => {\n        const v = value as { levels:unknown, levelNum:number }\n        this.levelList = v.levels\n        this.levelRefList = []\n        this.filteredLevelNum = v.levelNum\n        if (this.currentPage !== currentPage) {\n          this.currentPage = -1\n        }\n        this.currentPage = currentPage\n\n        this.$nextTick(() => {\n          PrismHighlightAll()\n        })\n      }).catch((e) => {\n        ElMessage.error('Error happing while loading post page. ' + e)\n      }).then(() => {\n        this.isLoadingPage = false\n      })\n    },\n    onCurrentPageChanged (pageNumber:number) {\n      const r = {\n        path: this.$route.path,\n        query: { ...this.$route.query, page: pageNumber },\n        hash: this.$route.hash,\n        params: { ...this.$route.params }\n      }\n      this.$router.push(r)\n    },\n    onLikeClicked (index:number, like:number) {\n      const l = this.levelList[index]\n      APIs.likePostLevel(this.postId, l.level, like).then(() => {\n        return APIs.getPostLevelLikeInfo(this.postId, l.level)\n      }).then((value) => {\n        const v = value as { hasLike:number, likeNum:number, dislikeNum:number }\n        l.hasLike = v.hasLike\n        l.likeNum = v.likeNum\n        l.dislikeNum = v.dislikeNum\n      }).catch((e) => {\n        ElMessage.error(`Can't ${like === 1 ? 'like' : 'dislike'} this level.` + e)\n      })\n    }\n  }\n})\nexport default class PostPage extends Vue {}\n","import { render } from \"./PostPage.vue?vue&type=template&id=3a1fd920\"\nimport script from \"./PostPage.vue?vue&type=script&lang=ts\"\nexport * from \"./PostPage.vue?vue&type=script&lang=ts\"\n\nimport \"./PostPage.vue?vue&type=style&index=0&id=3a1fd920&scope=true&lang=css\"\nscript.render = render\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PostPage.vue?vue&type=style&index=0&id=3a1fd920&scope=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./PostPageLevel.vue?vue&type=style&index=0&id=4dc7a65b&scope=true&lang=css\""],"sourceRoot":""}